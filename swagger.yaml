# Autogenerated, do not change it manually!
openapi: 3.1.0
info:
  title: Docker API Server
  version: 0.1.0
paths:
  /api/v1/:
    get:
      summary: Read Root
      operationId: read_root_api_v1__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/containers:
    get:
      tags:
      - Containers
      summary: List Containers
      operationId: list_containers_api_v1_containers_get
      parameters:
      - name: all
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: All
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: -1
          title: Limit
      - name: sparse
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Sparse
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'JSON-encoded dictionary of filters. E.g., `{"status": "running"}`'
          title: Filters
        description: 'JSON-encoded dictionary of filters. E.g., `{"status": "running"}`'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
                title: Response List Containers Api V1 Containers Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Containers
      summary: Create Container
      operationId: create_container_api_v1_containers_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContainerInput'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Create Container Api V1 Containers Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/containers/run:
    post:
      tags:
      - Containers
      summary: Run Container
      operationId: run_container_api_v1_containers_run_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContainerInput'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Run Container Api V1 Containers Run Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/containers/{container_id}:
    get:
      tags:
      - Containers
      summary: Get Container
      operationId: get_container_api_v1_containers__container_id__get
      parameters:
      - name: container_id
        in: path
        required: true
        schema:
          type: string
          title: Container Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get Container Api V1 Containers  Container Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Containers
      summary: Remove Container
      operationId: remove_container_api_v1_containers__container_id__delete
      parameters:
      - name: container_id
        in: path
        required: true
        schema:
          type: string
          title: Container Id
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Force
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/containers/{container_id}/start:
    post:
      tags:
      - Containers
      summary: Start Container
      operationId: start_container_api_v1_containers__container_id__start_post
      parameters:
      - name: container_id
        in: path
        required: true
        schema:
          type: string
          title: Container Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/containers/{container_id}/stop:
    post:
      tags:
      - Containers
      summary: Stop Container
      operationId: stop_container_api_v1_containers__container_id__stop_post
      parameters:
      - name: container_id
        in: path
        required: true
        schema:
          type: string
          title: Container Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/containers/{container_id}/logs:
    get:
      tags:
      - Containers
      summary: Fetch Container Logs
      operationId: fetch_container_logs_api_v1_containers__container_id__logs_get
      parameters:
      - name: container_id
        in: path
        required: true
        schema:
          type: string
          title: Container Id
      - name: tail
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Tail
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/images:
    get:
      tags:
      - Images
      summary: List Images
      operationId: list_images_api_v1_images_get
      parameters:
      - name: name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      - name: all
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: All
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'JSON-encoded dictionary of filters. E.g., `{"dangling": "true"}`'
          title: Filters
        description: 'JSON-encoded dictionary of filters. E.g., `{"dangling": "true"}`'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
                title: Response List Images Api V1 Images Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/images/pull:
    post:
      tags:
      - Images
      summary: Pull Image
      operationId: pull_image_api_v1_images_pull_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullPushImageInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Pull Image Api V1 Images Pull Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/images/push:
    post:
      tags:
      - Images
      summary: Push Image
      operationId: push_image_api_v1_images_push_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullPushImageInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/images/build:
    post:
      tags:
      - Images
      summary: Build Image
      operationId: build_image_api_v1_images_build_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildImageInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Build Image Api V1 Images Build Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/images/{image_id}:
    delete:
      tags:
      - Images
      summary: Remove Image
      operationId: remove_image_api_v1_images__image_id__delete
      parameters:
      - name: image_id
        in: path
        required: true
        schema:
          type: string
          title: Image Id
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Force
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/networks:
    get:
      tags:
      - Networks
      summary: List Networks
      operationId: list_networks_api_v1_networks_get
      parameters:
      - name: names
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          description: List of network names to filter by.
          title: Names
        description: List of network names to filter by.
      - name: ids
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          description: List of network IDs to filter by.
          title: Ids
        description: List of network IDs to filter by.
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'JSON-encoded dictionary of filters. E.g., `{"driver": "bridge"}`'
          title: Filters
        description: 'JSON-encoded dictionary of filters. E.g., `{"driver": "bridge"}`'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
                title: Response List Networks Api V1 Networks Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Networks
      summary: Create Network
      operationId: create_network_api_v1_networks_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkInput'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Create Network Api V1 Networks Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/networks/{network_id}:
    delete:
      tags:
      - Networks
      summary: Remove Network
      operationId: remove_network_api_v1_networks__network_id__delete
      parameters:
      - name: network_id
        in: path
        required: true
        schema:
          type: string
          title: Network Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/volumes:
    get:
      tags:
      - Volumes
      summary: List Volumes
      operationId: list_volumes_api_v1_volumes_get
      parameters:
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'JSON-encoded dictionary of filters. E.g., `{"dangling": "true"}`'
          title: Filters
        description: 'JSON-encoded dictionary of filters. E.g., `{"dangling": "true"}`'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties: true
                title: Response List Volumes Api V1 Volumes Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Volumes
      summary: Create Volume
      operationId: create_volume_api_v1_volumes_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVolumeInput'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Create Volume Api V1 Volumes Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/volumes/{volume_name}:
    delete:
      tags:
      - Volumes
      summary: Remove Volume
      operationId: remove_volume_api_v1_volumes__volume_name__delete
      parameters:
      - name: volume_name
        in: path
        required: true
        schema:
          type: string
          title: Volume Name
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Force
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    BuildImageInput:
      properties:
        path:
          type: string
          title: Path
          description: Path to build context
        tag:
          type: string
          title: Tag
          description: Image tag
        dockerfile:
          anyOf:
          - type: string
          - type: 'null'
          title: Dockerfile
          description: Path to Dockerfile
      type: object
      required:
      - path
      - tag
      title: BuildImageInput
    CreateContainerInput:
      properties:
        detach:
          type: boolean
          title: Detach
          description: Run container in the background. Should be True for long-running
            containers, can be false for short-lived containers
          default: true
        image:
          type: string
          title: Image
          description: Docker image name
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
          description: Container name
        entrypoint:
          anyOf:
          - type: string
          - type: 'null'
          title: Entrypoint
          description: Entrypoint to run in container
        command:
          anyOf:
          - type: string
          - type: 'null'
          title: Command
          description: Command to run in container
        network:
          anyOf:
          - type: string
          - type: 'null'
          title: Network
          description: Network to attach the container to
        environment:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Environment
          description: Environment variables dictionary
        ports:
          anyOf:
          - additionalProperties:
              anyOf:
              - type: integer
              - items:
                  type: integer
                type: array
              - prefixItems:
                - type: string
                - type: integer
                type: array
                maxItems: 2
                minItems: 2
              - type: 'null'
            type: object
          - type: 'null'
          title: Ports
          description: A map whose keys are the container port, and the values are
            the host port(s) to bind to.
        volumes:
          anyOf:
          - additionalProperties:
              additionalProperties:
                type: string
              type: object
            type: object
          - items:
              type: string
            type: array
          - type: 'null'
          title: Volumes
          description: Volume mappings
        labels:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - items:
              type: string
            type: array
          - type: 'null'
          title: Labels
          description: Container labels, either as a dictionary or a list of key=value
            strings
        auto_remove:
          type: boolean
          title: Auto Remove
          description: Automatically remove the container
          default: false
      type: object
      required:
      - image
      title: CreateContainerInput
      description: 'Schema for creating a new container.


        This is passed to the Python Docker SDK directly, so the fields are the same

        as the `docker.containers.create` method.'
    CreateNetworkInput:
      properties:
        name:
          type: string
          title: Name
          description: Network name
        driver:
          anyOf:
          - type: string
          - type: 'null'
          title: Driver
          description: Network driver
          default: bridge
        internal:
          type: boolean
          title: Internal
          description: Create an internal network
          default: false
        labels:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Labels
          description: Network labels
      type: object
      required:
      - name
      title: CreateNetworkInput
    CreateVolumeInput:
      properties:
        name:
          type: string
          title: Name
          description: Volume name
        driver:
          anyOf:
          - type: string
          - type: 'null'
          title: Driver
          description: Volume driver
          default: local
        labels:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Labels
          description: Volume labels
      type: object
      required:
      - name
      title: CreateVolumeInput
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    PullPushImageInput:
      properties:
        repository:
          type: string
          title: Repository
          description: Image repository
        tag:
          anyOf:
          - type: string
          - type: 'null'
          title: Tag
          description: Image tag
          default: latest
      type: object
      required:
      - repository
      title: PullPushImageInput
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
